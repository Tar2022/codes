
 mod=(int)(le9+7);
class Solution {
public:

 int f(vector<vector<int>>& grid,int row,int col)
 {
    int dp[row][col];
    for(int i=0;i<row;i++)
    {
        for(int j=0;j<col;j++)
        {
            if(grid[i][j]==1)
            {
                return 0;

            }
            if(i==0 && j==0)
            {
                return 1;
            }
            else
            {
                int left;
                int down;
                if(i>0) 
                {
                    down=dp[i-1][j];
                }
                if(j>0)
                {
                    left=dp[i][j-1];
                }
                dp[i][j]=(left+down)%mod;
            }

        }
    }
    
    return dp[row-1][col-1];
    
 }
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int row=obstacleGrid.size();
        int col=obstacleGrid[0].size();
      return  f(obstacleGrid,row,col);
    }
};
